aircraft.livery.init("Aircraft/747-400/Models/Liveries");

setlistener("sim/model/autostart", func(strt){
    if(strt.getBoolValue()){
        Startup();
    }else{
        Shutdown();
    }
},0,0);

var Startup = func{
setprop("controls/electric/engine[0]/generator",1);
setprop("controls/electric/engine[1]/generator",1);
setprop("controls/electric/engine[2]/generator",1);
setprop("controls/electric/engine[3]/generator",1);
setprop("controls/electric/avionics-switch",1);
setprop("controls/electric/battery-switch",1);
setprop("controls/electric/inverter-switch",1);
setprop("controls/lighting/instrument-lights",1);
setprop("controls/lighting/nav-lights",1);
setprop("controls/lighting/beacon",1);
setprop("controls/lighting/strobe",1);
setprop("controls/engines/engine[0]/cutoff",0);
setprop("controls/engines/engine[1]/cutoff",0);
setprop("controls/engines/engine[2]/cutoff",0);
setprop("controls/engines/engine[3]/cutoff",0);
setprop("controls/engines/engine[0]/cowl-flaps-norm",0);
setprop("controls/engines/engine[1]/cowl-flaps-norm",0);
setprop("controls/engines/engine[2]/cowl-flaps-norm",0);
setprop("controls/engines/engine[3]/cowl-flaps-norm",0);
setprop("controls/engines/engine[0]/ignition",1);
setprop("controls/engines/engine[1]/ignition",1);
setprop("controls/engines/engine[2]/ignition",1);
setprop("controls/engines/engine[3]/ignition",1);
setprop("controls/engines/engine[0]/fuel-pump",1);
setprop("controls/engines/engine[1]/fuel-pump",1);
setprop("controls/engines/engine[2]/fuel-pump",1);
setprop("controls/engines/engine[3]/fuel-pump",1);
setprop("controls/engines/engine[0]/WEP",1);
setprop("controls/engines/engine[1]/WEP",1);
setprop("controls/engines/engine[2]/WEP",1);
setprop("controls/engines/engine[3]/WEP",1);
setprop("engines/engine[0]/running",1);
setprop("engines/engine[1]/running",1);
setprop("engines/engine[2]/running",1);
setprop("engines/engine[3]/running",1);
setprop("controls/engines/throttle_idle",1);
}

var Shutdown = func{
setprop("controls/electric/engine[0]/generator",0);
setprop("controls/electric/engine[1]/generator",0);
setprop("controls/electric/engine[2]/generator",0);
setprop("controls/electric/engine[3]/generator",0);
setprop("controls/electric/avionics-switch",0);
setprop("controls/electric/battery-switch",0);
setprop("controls/electric/inverter-switch",0);
setprop("controls/lighting/instrument-lights",1);
setprop("controls/lighting/nav-lights",0);
setprop("controls/lighting/beacon",0);
setprop("controls/lighting/strobe",0);
setprop("controls/engines/engine[0]/cutoff",1);
setprop("controls/engines/engine[1]/cutoff",1);
setprop("controls/engines/engine[2]/cutoff",1);
setprop("controls/engines/engine[3]/cutoff",1);
setprop("controls/engines/engine[0]/cowl-flaps-norm",1);
setprop("controls/engines/engine[1]/cowl-flaps-norm",1);
setprop("controls/engines/engine[2]/cowl-flaps-norm",1);
setprop("controls/engines/engine[3]/cowl-flaps-norm",1);
setprop("controls/engines/engine[0]/ignition",0);
setprop("controls/engines/engine[1]/ignition",0);
setprop("controls/engines/engine[2]/ignition",0);
setprop("controls/engines/engine[3]/ignition",0);
setprop("controls/engines/engine[0]/fuel-pump",0);
setprop("controls/engines/engine[1]/fuel-pump",0);
setprop("controls/engines/engine[2]/fuel-pump",0);
setprop("controls/engines/engine[3]/fuel-pump",0);
setprop("engines/engine[0]/running",0);
setprop("engines/engine[1]/running",0);
setprop("engines/engine[2]/running",0);
setprop("engines/engine[3]/running",0);
}